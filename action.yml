name: 'Run node tests'
description: 'Setup Node environment and run install, audit, test, and build commands'
branding:
  icon: 'package'
  color: 'green'
inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: 'lts/*'
  npm-version:
    description: 'npm version to use if different from the default'
    required: false
    default: ''
  working-directory:
    description: 'Directory to run the commands in'
    required: false
    default: '.'
  cache-dependency-path:
    description: 'Path to the dependency file to use for caching'
    required: false
    default: 'package-lock.json'
  install-skip:
    description: 'Skip npm install'
    required: false
    default: 'false'
  install-command:
    description: 'Command to run npm ci/install'
    required: false
    default: 'npm ci'
  audit-skip:
    description: 'Skip npm audit'
    required: false
    default: 'false'
  audit-command:
    description: 'Command to run npm audit'
    required: false
    default: 'npm audit --audit-level=high --production'
  test-skip:
    description: 'Skip tests'
    required: false
    default: 'false'
  test-command:
    description: 'Command to run tests'
    required: false
    default: 'npm test'
  build-skip:
    description: 'Skip build'
    required: false
    default: 'false'
  build-command:
    description: 'Command to run build'
    required: false
    default: 'npm run build'

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
        cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Install npm
      if: ${{ inputs.npm-version }}
      run: npm install -g npm@${{ inputs.npm-version }}
      shell: bash

    - name: Run npm audit
      if: ${{ inputs.audit-skip != 'true' }}
      run: ${{ inputs.audit-command }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Install dependencies
      if: ${{ inputs.install-skip != 'true' }}
      run: ${{ inputs.install-command }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Run tests
      if: ${{ inputs.test-skip != 'true' }}
      run: ${{ inputs.test-command }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Run build
      if: ${{ inputs.build-skip != 'true' }}
      run: ${{ inputs.build-command }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}